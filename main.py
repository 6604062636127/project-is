import streamlit as st
import pandas as pd
import joblib

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏£‡∏ô‡πÑ‡∏ß‡πâ
model = joblib.load("model.pkl")
scaler = joblib.load("scaler.pkl")

st.title("üè° House Price Prediction App")
st.write("‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
area = st.number_input("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡∏ï‡∏£.‡∏ü‡∏∏‡∏ï)", min_value=500, max_value=20000, step=100)
bedrooms = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô", min_value=1, max_value=10, step=1)
bathrooms = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", min_value=1, max_value=5, step=1)
stories = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô", min_value=1, max_value=4, step=1)
parking = st.number_input("‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ", min_value=0, max_value=5, step=1)

# ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
price_per_sqft = area / 1000  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
rooms_per_sqft = (bedrooms + bathrooms) / area
parking_per_sqft = parking / area

# üîπ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô)
X_new = pd.DataFrame({
    'area': [5000],
    'bedrooms': [3],
    'bathrooms': [2],
    'stories': [2],
    'parking': [1],

})

# üîπ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏ï‡∏≠‡∏ô Train
X_new['price_per_sqft'] = 0  # ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤ Placeholder
X_new['rooms_per_sqft'] = (X_new['bedrooms'] + X_new['bathrooms']) / X_new['area']
X_new['parking_per_sqft'] = X_new['parking'] / X_new['area']

# üîπ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Object ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÉ‡∏ä‡πâ LabelEncoder ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢ Train ‡πÑ‡∏ß‡πâ)
for col in label_encoders:
    X_new[col] = label_encoders[col].transform(X_new[col])

# üîπ ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏≠‡∏ô Train
X_new = X_new[X_train.columns]

# üîπ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô
predicted_price = rf_model.predict(X_new)
print(f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏î‡πâ: {predicted_price[0]:,.2f} ‡∏ö‡∏≤‡∏ó")
